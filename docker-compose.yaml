services:
  api:
    build: .
    container_name: comments-api
    environment:
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        DB_DB: postgres
        DB_HOST: db
        DB_TABLE: postgres
        DB_PORT: 5432
        SSL_MODE: disable
    ports:
      - "8080:8080"
    networks:
      - fullstack
    healthcheck:
      test: ["CMD-SHELL", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/alive", "|| exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
    - db
  db:
    image: postgres:15.3
    container_name: comments-database
    restart: always
    user: postgres
    ports:
        - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
        - fullstack
    volumes:
        - "database_postgres:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ${PWD}/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8081:8080
    volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:ro
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - db
volumes: 
  database_postgres:
networks:
  fullstack:
    driver: bridge
    